#!/bin/bash
#
# cwl-spec
#   usage:
#     cwl-spec [start|stop|list] <options>
#
set -e

#
# Variables
#
VERSION="20180514"
CWLSPEC_DIR="${HOME}/.cwlspec"

#
# Load functions
#

## Version
version() {
  echo "cwl-spec version ${VERSION}"
}

## Help
help() {
  cat <<-HELP

cwl-spec version ${VERSION}
Usage: cwl-spec [command] [options...]
Commands:
  start    Run CWL-spec daemon and containers
  stop     Stop daemon and containers
  list     List spec data stored in Elasticsearch

HELP
}

## Install/Initialize CWL-spec
check_cmd() {
  cmd=${1}
  printf "Checking ${cmd}..."
  if [[ -e $(which ${cmd}) ]]; then
    echo "OK."
  else
    echo -e "\nERROR: ${cmd} not found."
    echo "Failed to init CWL-spec"
    exit 1
  fi
}

check_dependencies() {
  check_cmd "git"
  # check_cmd "docker"
  # check_cmd "docker-compose"
}

fetch_cwlspec_repo() {
  local url="https://github.com/inutano/cwl-spec"
  echo "Installing cwlspec libraries at ${CWLSPEC_DIR}..."
  git clone "${url}" "${CWLSPEC_DIR}"
}

fetch_dmc_repo(){
  local url="https://github.com/inutano/docker-metrics-collector"
  local dmc_repo="${CWLSPEC_DIR}/repos/dmc"
  echo "Installing docker metrics collector at ${dmc_repo}..."
  mkdir -p "${CWLSPEC_DIR}/repos"
  git clone "${url}" "${dmc_repo}"
}

generate_config(){
  echo "Generating config file at ${CWLSPEC_DIR}/config ..."
  cat  > "${CWLSPEC_DIR}/config" <<-EOS
ES_HOST=${ES_HOST}
ES_PORT=${ES_PORT}
DMC_DIR_PATH=${HOME}/.cwlspec/repos/dmc
EOS
}

pull_containers(){
  echo "Pulling containers..."
  docker pull "yyabuki/docker-cwllog-generator:latest"
}

init_cwl_spec() {
  if [[ -e "${CWLSPEC_DIR}" ]]; then
    help
    exit 0
  else
    echo "Initializing CWL-spec..."
    check_dependencies
    fetch_cwlspec_repo
    fetch_dmc_repo
    generate_config
    pull_containers
    echo "CWL-spec initialization complete. Starting system..."
  fi
}

## Start CWL-spec processes and containers
start_cwl_spec() {
  echo "Starting CWL-spec..."
}

## Stop CWL-spec processes and containers
stop_cwl_spec() {
  echo "Stopping CWL-spec..."
}

## List all spec data of workflows and tools stored in ES
list_data() {
  echo "Fetching data..."
}

#
# Exec: init if no arguments specified, otherwise select command
#
if [[ $# -eq 0 ]]; then
  init_cwl_spec
else
  while [[ $# -gt 0 ]]; do
    key=${1}
    case ${key} in
      start)
        start_cwl_spec
        ;;
      stop)
        stop_cwl_spec
        ;;
      restart)
        stop_cwl_spec
        start_cwl_spec
        ;;
      list)
        list_data
        ;;
      -v|--version)
        version
        exit 0
        ;;
      *)
        help
        exit 0
        ;;
    esac
    shift
  done
fi
